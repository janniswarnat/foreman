apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.expose: "true"
    kompose.service.type: loadbalancer
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.expose: "true"
        kompose.service.type: loadbalancer
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - args:
            - postgres
            - -c
            - log_statement=all
            - -c
            - log_duration=on
            - -c
            - log_min_messages=INFO
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DATABASE
              value: foreman
            - name: POSTGRES_PASSWORD
              value: foreman
            - name: POSTGRES_USER
              value: foreman
          image: postgres:14
          livenessProbe:
            exec:
              command:
                - nc -z 127.0.0.1 5432 || exit 1
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 30
          name: db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db
      restartPolicy: Always
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
status: {}
